name: GitHub Pages

on:
  push:
    branches:
      - master # Set a branch to deploy
  pull_request:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  hugo_version:
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

  pre_build:
    runs-on: ubuntu-22.04
    needs: hugo_version
    steps:
      - uses: actions/checkout@v3
      - name: Build with Hugo
        run: |
          hugo --cleanDestinationDir --environment epub -d temp
      - name: List Temp Directory
        run: ls -l temp/
      - name: Upload Temp as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: temp
          path: temp

  build:
    runs-on: ubuntu-22.04
    needs: pre_build
    steps:
      - name: Install zip/unzip
        run: |
          sudo apt-get update
          sudo apt-get install -y zip unzip
      - name: Create EPUB
        run: |
          cd temp
          rm -f ebook.epub
          zip -rX ebook.epub mimetype content META-INF uploads
      - name: List Temp Directory After EPUB Creation
        run: ls -l temp/
      - name: Upload EPUB Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ebook
          path: temp/ebook.epub

  post_build:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Build with Hugo for Default Environment
        run: |
          hugo --environment _default -d temp2
      - name: List Temp2 Directory
        run: ls -l temp2/
      - name: Upload Temp2 as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: temp2
          path: temp2

  deploy:
    runs-on: ubuntu-22.04
    needs: post_build
    steps:
      - name: Create Public Directory
        run: mkdir -p public
      - name: Copy EPUB to Public Directory
        run: cp temp/ebook.epub public/
      - name: Copy Temp2 to Public Directory
        run: cp -r temp2/* public/
      - name: List Public Directory
        run: ls -l public/
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

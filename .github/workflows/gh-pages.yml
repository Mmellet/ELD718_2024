name: GitHub Pages

on:
  push:
    branches:
      - master # Set a branch to deploy
  pull_request:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  deploy:
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Install jpegoptim
        run: sudo apt-get update && sudo apt-get install jpegoptim -y

      - name: Generate EPUB
        run: |
          jpegoptim --max=85 *.jpg
          hugo --cleanDestinationDir --environment epub -d temp
          
          # Vérifie si le dossier 'temp' existe
          if [ -d "temp" ]; then
            echo "Le dossier 'temp' existe."
          else
            echo "Le dossier 'temp' n'existe pas. Vérifie les étapes précédentes."
          fi

          cd temp
          find uploads -name '*.jpg' -exec jpegoptim {} \;
          rm -f ../ebook.epub
          
          # Créer l'EPUB
          zip -X0 ../ebook.epub mimetype
          zip -rX ../ebook.epub content META-INF uploads

          # Lister le contenu du répertoire parent
          echo "Contenu du répertoire parent après la création de l'EPUB :"
          ls -l ../  # Vérifie si le fichier ebook.epub est présent

      - name: Move EPUB to public directory
        run: |
          echo "Tentative de déplacement de ebook.epub vers le répertoire public."
          mv ../ebook.epub ./public/
          echo "Contenu du répertoire public après le déplacement :"
          ls -l ./public/

      - name: Build
        run: hugo 
        
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

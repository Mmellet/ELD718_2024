name: GitHub Pages

on:
  push:
    branches:
      - master # Set a branch to deploy
  pull_request:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  deploy:
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Install jpegoptim
        run: sudo apt-get update && sudo apt-get install jpegoptim -y

      - name: Run image optimization and Hugo build
        run: |
          # Optimisation des images JPEG avec une compression agressive (réduction de qualité à 85%)
          jpegoptim --max=85 *.jpg

          # Étape 1: Exécuter Hugo pour générer le contenu dans le répertoire temp
          hugo --cleanDestinationDir --environment epub -d temp

          # Étape 2: Naviguer dans le répertoire généré par Hugo
          cd temp

          find uploads -name '*.jpg' -exec jpegoptim {} \;

          # Étape 4: Supprimer l'ancien fichier EPUB s'il existe
          rm -f ../ebook.epub

          # Étape 5: Créer l'EPUB avec le fichier mimetype non compressé
          zip -X0 ../ebook.epub mimetype

          # Étape 6: Ajouter le reste des fichiers avec compression
          zip -rX ../ebook.epub content META-INF uploads

      - name: Build
        run: hugo 
        
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public


